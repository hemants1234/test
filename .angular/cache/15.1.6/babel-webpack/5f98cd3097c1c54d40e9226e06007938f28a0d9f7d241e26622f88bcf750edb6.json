{"ast":null,"code":"import { fromEvent, scan, throttleTime, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./../../post.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"ngx-pagination\";\nfunction FoodListingComponent_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 6);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵelement(4, \"img\", 7);\n    i0.ɵɵelementStart(5, \"span\", 8);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8, \" this is good for eat\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const post_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(post_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", post_r1.src, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", post_r1.name, \" \");\n  }\n}\nconst _c0 = function (a0, a1, a2) {\n  return {\n    itemsPerPage: a0,\n    currentPage: a1,\n    totalItems: a2\n  };\n};\nexport class FoodListingComponent {\n  constructor(postService) {\n    this.postService = postService;\n    this.page = 1;\n    this.count = 0;\n    this.tableSize = 10;\n    this.tableSizes = [3, 6, 9, 12];\n  }\n  ngOnInit() {\n    fromEvent(document, 'click').pipe(throttleTime(1000), map(event => {\n      const e = event;\n      return e.clientX;\n    }),\n    //      map((event) => console.log(event.clientX)),\n    scan((count, clientX) => count + clientX, 0)).subscribe(count => console.log(`Clicked ${count} times`));\n    /*   fromEvent(document, 'click')\n     .pipe(scan((count) => count + 1, 0))\n     .subscribe((count) => console.log(`Clicked ${count} times`)); */\n    this.fetchPosts();\n  }\n  fetchPosts() {\n    debugger;\n    this.postService.getAllPosts().subscribe(Response => this.POSTS = Response);\n    //.subscribe( response => {\n    // this.POSTS = response ; \n    //console.log(response);\n    //},\n    //(error) => {\n    //   console.log(error);\n    //  }\n    //);\n  }\n\n  onTableDataChange(event) {\n    this.page = event;\n    this.fetchPosts();\n  }\n  onTableSizeChange(event) {\n    this.tableSize = event.target.value;\n    this.page = 1;\n    this.fetchPosts();\n  }\n}\nFoodListingComponent.ɵfac = function FoodListingComponent_Factory(t) {\n  return new (t || FoodListingComponent)(i0.ɵɵdirectiveInject(i1.PostService));\n};\nFoodListingComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FoodListingComponent,\n  selectors: [[\"app-food-listing\"]],\n  decls: 17,\n  vars: 8,\n  consts: [[1, \"container\"], [1, \"text-center\", \"mt-4\", \"mb-2\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [1, \"d-flex\", \"justify-content-center\"], [\"previousLabel\", \"Prev\", \"nextLabel\", \"Next\", 3, \"pageChange\"], [\"scope\", \"row\"], [2, \"width\", \"100px\", \"height\", \"100px\", 3, \"src\"], [1, \"pl-3\"]],\n  template: function FoodListingComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\", 1);\n      i0.ɵɵtext(2, \"Food Available\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"table\", 2)(4, \"thead\")(5, \"tr\")(6, \"th\");\n      i0.ɵɵtext(7, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"th\");\n      i0.ɵɵtext(9, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\");\n      i0.ɵɵtext(11, \"About \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(12, \"tbody\");\n      i0.ɵɵtemplate(13, FoodListingComponent_tr_13_Template, 9, 3, \"tr\", 3);\n      i0.ɵɵpipe(14, \"paginate\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 4)(16, \"pagination-controls\", 5);\n      i0.ɵɵlistener(\"pageChange\", function FoodListingComponent_Template_pagination_controls_pageChange_16_listener($event) {\n        return ctx.onTableDataChange($event);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(14, 1, ctx.POSTS, i0.ɵɵpureFunction3(4, _c0, ctx.tableSize, ctx.page, ctx.count)));\n    }\n  },\n  dependencies: [i2.NgForOf, i3.PaginationControlsComponent, i3.PaginatePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,SAAS,EAAEC,IAAI,EAAEC,YAAY,EAAEC,GAAG,QAAQ,MAAM;;;;;;;ICSjDC,0BAWC;IACiBA,YAAa;IAAAA,iBAAK;IAClCA,0BAAI;IAAAA,yBAA4D;IAAEA,+BAAmB;IAAAA,YAAgB;IAAAA,iBAAO;IAC5GA,0BAAI;IAACA,qCAAoB;IAAAA,iBAAK;;;;IAFdA,eAAa;IAAbA,gCAAa;IACiBA,eAAgB;IAAhBA,mDAAgB;IAAuBA,eAAgB;IAAhBA,4CAAgB;;;;;;;;;;ADd/G,OAAM,MAAOC,oBAAoB;EAQ/BC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAL/B,SAAI,GAAW,CAAC;IAChB,UAAK,GAAW,CAAC;IACjB,cAAS,GAAW,EAAE;IACtB,eAAU,GAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EAEgB;EAE/CC,QAAQ;IAGNR,SAAS,CAACS,QAAQ,EAAE,OAAO,CAAC,CAC3BC,IAAI,CACHR,YAAY,CAAC,IAAI,CAAC,EAClBC,GAAG,CAACQ,KAAK,IAAG;MACV,MAAMC,CAAC,GAAGD,KAAmB;MAC7B,OAAQC,CAAC,CAACC,OAAO;IACjB,CAAC,CAAC;IACV;IAEMZ,IAAI,CAAC,CAACa,KAAK,EAAED,OAAO,KAAKC,KAAK,GAAED,OAAO,EAAG,CAAC,CAAC,CAC7C,CACAE,SAAS,CAAED,KAAK,IAAKE,OAAO,CAACC,GAAG,CAAC,WAAWH,KAAK,QAAQ,CAAC,CAAC;IAE5D;;;IAGE,IAAI,CAACI,UAAU,EAAE;EACrB;EAEAA,UAAU;IACR;IAEA,IAAI,CAACX,WAAW,CAACY,WAAW,EAAE,CAACJ,SAAS,CAAEK,QAAQ,IAAI,IAAI,CAACC,KAAK,GAAGD,QAAQ,CAAE;IAC7E;IACC;IACC;IACA;IACA;IACD;IACD;IACF;EACA;;EAEAE,iBAAiB,CAACX,KAAU;IAC1B,IAAI,CAACY,IAAI,GAAGZ,KAAK;IACjB,IAAI,CAACO,UAAU,EAAE;EACnB;EACAM,iBAAiB,CAACb,KAAU;IAC1B,IAAI,CAACc,SAAS,GAAGd,KAAK,CAACe,MAAM,CAACC,KAAK;IACnC,IAAI,CAACJ,IAAI,GAAG,CAAC;IACb,IAAI,CAACL,UAAU,EAAE;EACnB;;AAtDWb,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVjC5B,8BAAuB;MACeA,8BAAc;MAAAA,iBAAK;MACrDA,gCAAqB;MAGXA,kBAAE;MAAAA,iBAAK;MACXA,0BAAI;MAAAA,oBAAI;MAAAA,iBAAK;MACbA,2BAAI;MAAAA,uBAAM;MAAAA,iBAAK;MAGnBA,8BAAO;MACLA,qEAeK;;MACPA,iBAAQ;MAEVA,+BAA2C;MAIvCA;QAAA,OAAc6B,6BAAyB;MAAA,EAAC;MAE1C7B,iBAAsB;;;MArBxBA,gBAMqB;MANrBA,0HAMqB","names":["fromEvent","scan","throttleTime","map","i0","FoodListingComponent","constructor","postService","ngOnInit","document","pipe","event","e","clientX","count","subscribe","console","log","fetchPosts","getAllPosts","Response","POSTS","onTableDataChange","page","onTableSizeChange","tableSize","target","value","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/Hemant/test/src/app/components/food-listing/food-listing.component.ts","/home/Hemant/test/src/app/components/food-listing/food-listing.component.html"],"sourcesContent":["import { Component, OnInit} from '@angular/core';\nimport { PostService } from './../../post.service';\nimport { fromEvent, scan, throttleTime, map } from 'rxjs';\n\n\n@Component({\n  selector: 'app-food-listing',\n  templateUrl: './food-listing.component.html',\n  styleUrls: ['./food-listing.component.css']\n})\nexport class FoodListingComponent implements OnInit {\n\n  POSTS: any;\n  page: number = 1;\n  count: number = 0;\n  tableSize: number = 10;\n  tableSizes: any = [3, 6, 9, 12];\n\n  constructor(private postService: PostService) {}\n\n  ngOnInit(): void {\n\n\n    fromEvent(document, 'click')\n    .pipe(\n      throttleTime(1000),\n      map(event => {\n        const e = event as MouseEvent;\n        return  e.clientX;\n        }),\n//      map((event) => console.log(event.clientX)),\n\n      scan((count, clientX) => count+ clientX , 0)\n    )\n    .subscribe((count) => console.log(`Clicked ${count} times`));\n\n    /*   fromEvent(document, 'click')\n     .pipe(scan((count) => count + 1, 0))\n     .subscribe((count) => console.log(`Clicked ${count} times`)); */\n      this.fetchPosts();\n  }\n\n  fetchPosts(): void {\n    debugger;\n    \n    this.postService.getAllPosts().subscribe( Response => this.POSTS = Response );\n    //.subscribe( response => {\n     // this.POSTS = response ; \n      //console.log(response);\n      //},\n      //(error) => {\n     //   console.log(error);\n    //  }\n  //);\n  }\n\n  onTableDataChange(event: any) {\n    this.page = event;\n    this.fetchPosts();\n  }\n  onTableSizeChange(event: any): void {\n    this.tableSize = event.target.value;\n    this.page = 1;\n    this.fetchPosts();\n  }\n\n}\n","<div class=\"container\">\n    <h3 class=\"text-center mt-4 mb-2\">Food Available</h3>\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>Name</th>\n          <th>About </th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr\n          *ngFor=\"\n            let post of POSTS\n              | paginate\n                : {\n                    itemsPerPage: tableSize,\n                    currentPage: page,\n                    totalItems: count\n                  };\n            let i = index\n          \"\n        >\n          <th scope=\"row\">{{ post.id }}</th>\n          <td><img style=\"width: 100px; height: 100px;\" [src]=\"post.src\"/>  <span class=\"pl-3\">{{ post.name }} </span></td>\n          <td> this is good for eat</td>\n        </tr>\n      </tbody>\n    </table>\n    <div class=\"d-flex justify-content-center\">\n      <pagination-controls\n        previousLabel=\"Prev\"\n        nextLabel=\"Next\"\n        (pageChange)=\"onTableDataChange($event)\"\n      >\n      </pagination-controls>\n    </div>\n  </div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}